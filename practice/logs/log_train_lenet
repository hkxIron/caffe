I1102 22:54:08.460824  2227 caffe.cpp:211] Use CPU.
I1102 22:54:08.462368  2227 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 10000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
net: "examples/mnist/lenet_train_test.prototxt"
train_state {
  level: 0
  stage: ""
}
I1102 22:54:08.462513  2227 solver.cpp:90] Creating training net from net file: examples/mnist/lenet_train_test.prototxt
I1102 22:54:08.463029  2227 net.cpp:294] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I1102 22:54:08.463059  2227 net.cpp:294] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I1102 22:54:08.463140  2227 net.cpp:51] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I1102 22:54:08.463227  2227 layer_factory.hpp:77] Creating layer mnist
I1102 22:54:08.466995  2227 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I1102 22:54:08.468482  2227 net.cpp:84] Creating Layer mnist
I1102 22:54:08.468644  2227 net.cpp:380] mnist -> data
I1102 22:54:08.469938  2227 net.cpp:380] mnist -> label
I1102 22:54:08.470667  2227 data_layer.cpp:45] output data size: 64,1,28,28
I1102 22:54:08.471223  2227 net.cpp:122] Setting up mnist
I1102 22:54:08.471292  2227 net.cpp:129] Top shape: 64 1 28 28 (50176)
I1102 22:54:08.471312  2227 net.cpp:129] Top shape: 64 (64)
I1102 22:54:08.471323  2227 net.cpp:137] Memory required for data: 200960
I1102 22:54:08.471340  2227 layer_factory.hpp:77] Creating layer conv1
I1102 22:54:08.471367  2227 net.cpp:84] Creating Layer conv1
I1102 22:54:08.471382  2227 net.cpp:406] conv1 <- data
I1102 22:54:08.471403  2227 net.cpp:380] conv1 -> conv1
I1102 22:54:08.472772  2227 net.cpp:122] Setting up conv1
I1102 22:54:08.472981  2227 net.cpp:129] Top shape: 64 20 24 24 (737280)
I1102 22:54:08.473021  2227 net.cpp:137] Memory required for data: 3150080
I1102 22:54:08.473071  2227 layer_factory.hpp:77] Creating layer pool1
I1102 22:54:08.473114  2227 net.cpp:84] Creating Layer pool1
I1102 22:54:08.473148  2227 net.cpp:406] pool1 <- conv1
I1102 22:54:08.473194  2227 net.cpp:380] pool1 -> pool1
I1102 22:54:08.473254  2227 net.cpp:122] Setting up pool1
I1102 22:54:08.473294  2227 net.cpp:129] Top shape: 64 20 12 12 (184320)
I1102 22:54:08.473327  2227 net.cpp:137] Memory required for data: 3887360
I1102 22:54:08.473361  2227 layer_factory.hpp:77] Creating layer conv2
I1102 22:54:08.473400  2227 net.cpp:84] Creating Layer conv2
I1102 22:54:08.473435  2227 net.cpp:406] conv2 <- pool1
I1102 22:54:08.473472  2227 net.cpp:380] conv2 -> conv2
I1102 22:54:08.473747  2227 net.cpp:122] Setting up conv2
I1102 22:54:08.473788  2227 net.cpp:129] Top shape: 64 50 8 8 (204800)
I1102 22:54:08.473822  2227 net.cpp:137] Memory required for data: 4706560
I1102 22:54:08.473860  2227 layer_factory.hpp:77] Creating layer pool2
I1102 22:54:08.473898  2227 net.cpp:84] Creating Layer pool2
I1102 22:54:08.473933  2227 net.cpp:406] pool2 <- conv2
I1102 22:54:08.473969  2227 net.cpp:380] pool2 -> pool2
I1102 22:54:08.474059  2227 net.cpp:122] Setting up pool2
I1102 22:54:08.474100  2227 net.cpp:129] Top shape: 64 50 4 4 (51200)
I1102 22:54:08.474134  2227 net.cpp:137] Memory required for data: 4911360
I1102 22:54:08.474167  2227 layer_factory.hpp:77] Creating layer ip1
I1102 22:54:08.474205  2227 net.cpp:84] Creating Layer ip1
I1102 22:54:08.474239  2227 net.cpp:406] ip1 <- pool2
I1102 22:54:08.474277  2227 net.cpp:380] ip1 -> ip1
I1102 22:54:08.477434  2227 net.cpp:122] Setting up ip1
I1102 22:54:08.488879  2227 net.cpp:129] Top shape: 64 500 (32000)
I1102 22:54:08.488931  2227 net.cpp:137] Memory required for data: 5039360
I1102 22:54:08.489985  2227 layer_factory.hpp:77] Creating layer relu1
I1102 22:54:08.490039  2227 net.cpp:84] Creating Layer relu1
I1102 22:54:08.490192  2227 net.cpp:406] relu1 <- ip1
I1102 22:54:08.491274  2227 net.cpp:367] relu1 -> ip1 (in-place)
I1102 22:54:08.494197  2227 net.cpp:122] Setting up relu1
I1102 22:54:08.494232  2227 net.cpp:129] Top shape: 64 500 (32000)
I1102 22:54:08.494246  2227 net.cpp:137] Memory required for data: 5167360
I1102 22:54:08.494257  2227 layer_factory.hpp:77] Creating layer ip2
I1102 22:54:08.494276  2227 net.cpp:84] Creating Layer ip2
I1102 22:54:08.494287  2227 net.cpp:406] ip2 <- ip1
I1102 22:54:08.494302  2227 net.cpp:380] ip2 -> ip2
I1102 22:54:08.494361  2227 net.cpp:122] Setting up ip2
I1102 22:54:08.494375  2227 net.cpp:129] Top shape: 64 10 (640)
I1102 22:54:08.494385  2227 net.cpp:137] Memory required for data: 5169920
I1102 22:54:08.494400  2227 layer_factory.hpp:77] Creating layer loss
I1102 22:54:08.494415  2227 net.cpp:84] Creating Layer loss
I1102 22:54:08.494426  2227 net.cpp:406] loss <- ip2
I1102 22:54:08.494437  2227 net.cpp:406] loss <- label
I1102 22:54:08.494451  2227 net.cpp:380] loss -> loss
I1102 22:54:08.494477  2227 layer_factory.hpp:77] Creating layer loss
I1102 22:54:08.494500  2227 net.cpp:122] Setting up loss
I1102 22:54:08.494513  2227 net.cpp:129] Top shape: (1)
I1102 22:54:08.494524  2227 net.cpp:132]     with loss weight 1
I1102 22:54:08.494547  2227 net.cpp:137] Memory required for data: 5169924
I1102 22:54:08.494559  2227 net.cpp:198] loss needs backward computation.
I1102 22:54:08.494572  2227 net.cpp:198] ip2 needs backward computation.
I1102 22:54:08.494583  2227 net.cpp:198] relu1 needs backward computation.
I1102 22:54:08.494595  2227 net.cpp:198] ip1 needs backward computation.
I1102 22:54:08.494606  2227 net.cpp:198] pool2 needs backward computation.
I1102 22:54:08.494616  2227 net.cpp:198] conv2 needs backward computation.
I1102 22:54:08.494626  2227 net.cpp:198] pool1 needs backward computation.
I1102 22:54:08.494637  2227 net.cpp:198] conv1 needs backward computation.
I1102 22:54:08.494648  2227 net.cpp:200] mnist does not need backward computation.
I1102 22:54:08.494658  2227 net.cpp:242] This network produces output loss
I1102 22:54:08.494675  2227 net.cpp:255] Network initialization done.
I1102 22:54:08.494839  2227 solver.cpp:175] Creating test net (#0) specified by net file: examples/mnist/lenet_train_test.prototxt
I1102 22:54:08.494871  2227 net.cpp:294] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I1102 22:54:08.494967  2227 net.cpp:51] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I1102 22:54:08.495335  2227 layer_factory.hpp:77] Creating layer mnist
I1102 22:54:08.499027  2227 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I1102 22:54:08.499941  2227 net.cpp:84] Creating Layer mnist
I1102 22:54:08.500030  2227 net.cpp:380] mnist -> data
I1102 22:54:08.500053  2227 net.cpp:380] mnist -> label
I1102 22:54:08.500080  2227 data_layer.cpp:45] output data size: 100,1,28,28
I1102 22:54:08.500141  2227 net.cpp:122] Setting up mnist
I1102 22:54:08.500159  2227 net.cpp:129] Top shape: 100 1 28 28 (78400)
I1102 22:54:08.500169  2227 net.cpp:129] Top shape: 100 (100)
I1102 22:54:08.500177  2227 net.cpp:137] Memory required for data: 314000
I1102 22:54:08.500188  2227 layer_factory.hpp:77] Creating layer label_mnist_1_split
I1102 22:54:08.500200  2227 net.cpp:84] Creating Layer label_mnist_1_split
I1102 22:54:08.500211  2227 net.cpp:406] label_mnist_1_split <- label
I1102 22:54:08.500223  2227 net.cpp:380] label_mnist_1_split -> label_mnist_1_split_0
I1102 22:54:08.500237  2227 net.cpp:380] label_mnist_1_split -> label_mnist_1_split_1
I1102 22:54:08.500250  2227 net.cpp:122] Setting up label_mnist_1_split
I1102 22:54:08.500262  2227 net.cpp:129] Top shape: 100 (100)
I1102 22:54:08.500270  2227 net.cpp:129] Top shape: 100 (100)
I1102 22:54:08.500278  2227 net.cpp:137] Memory required for data: 314800
I1102 22:54:08.500288  2227 layer_factory.hpp:77] Creating layer conv1
I1102 22:54:08.500304  2227 net.cpp:84] Creating Layer conv1
I1102 22:54:08.500314  2227 net.cpp:406] conv1 <- data
I1102 22:54:08.500326  2227 net.cpp:380] conv1 -> conv1
I1102 22:54:08.500360  2227 net.cpp:122] Setting up conv1
I1102 22:54:08.500373  2227 net.cpp:129] Top shape: 100 20 24 24 (1152000)
I1102 22:54:08.500382  2227 net.cpp:137] Memory required for data: 4922800
I1102 22:54:08.500396  2227 layer_factory.hpp:77] Creating layer pool1
I1102 22:54:08.500416  2227 net.cpp:84] Creating Layer pool1
I1102 22:54:08.500435  2227 net.cpp:406] pool1 <- conv1
I1102 22:54:08.500448  2227 net.cpp:380] pool1 -> pool1
I1102 22:54:08.500463  2227 net.cpp:122] Setting up pool1
I1102 22:54:08.500475  2227 net.cpp:129] Top shape: 100 20 12 12 (288000)
I1102 22:54:08.500484  2227 net.cpp:137] Memory required for data: 6074800
I1102 22:54:08.500494  2227 layer_factory.hpp:77] Creating layer conv2
I1102 22:54:08.500602  2227 net.cpp:84] Creating Layer conv2
I1102 22:54:08.500636  2227 net.cpp:406] conv2 <- pool1
I1102 22:54:08.500658  2227 net.cpp:380] conv2 -> conv2
I1102 22:54:08.500861  2227 net.cpp:122] Setting up conv2
I1102 22:54:08.500879  2227 net.cpp:129] Top shape: 100 50 8 8 (320000)
I1102 22:54:08.500942  2227 net.cpp:137] Memory required for data: 7354800
I1102 22:54:08.501034  2227 layer_factory.hpp:77] Creating layer pool2
I1102 22:54:08.501075  2227 net.cpp:84] Creating Layer pool2
I1102 22:54:08.501109  2227 net.cpp:406] pool2 <- conv2
I1102 22:54:08.501145  2227 net.cpp:380] pool2 -> pool2
I1102 22:54:08.501186  2227 net.cpp:122] Setting up pool2
I1102 22:54:08.501224  2227 net.cpp:129] Top shape: 100 50 4 4 (80000)
I1102 22:54:08.501257  2227 net.cpp:137] Memory required for data: 7674800
I1102 22:54:08.501291  2227 layer_factory.hpp:77] Creating layer ip1
I1102 22:54:08.501330  2227 net.cpp:84] Creating Layer ip1
I1102 22:54:08.501446  2227 net.cpp:406] ip1 <- pool2
I1102 22:54:08.501507  2227 net.cpp:380] ip1 -> ip1
I1102 22:54:08.514415  2227 net.cpp:122] Setting up ip1
I1102 22:54:08.514533  2227 net.cpp:129] Top shape: 100 500 (50000)
I1102 22:54:08.514569  2227 net.cpp:137] Memory required for data: 7874800
I1102 22:54:08.514614  2227 layer_factory.hpp:77] Creating layer relu1
I1102 22:54:08.514655  2227 net.cpp:84] Creating Layer relu1
I1102 22:54:08.514690  2227 net.cpp:406] relu1 <- ip1
I1102 22:54:08.514727  2227 net.cpp:367] relu1 -> ip1 (in-place)
I1102 22:54:08.514766  2227 net.cpp:122] Setting up relu1
I1102 22:54:08.514801  2227 net.cpp:129] Top shape: 100 500 (50000)
I1102 22:54:08.514834  2227 net.cpp:137] Memory required for data: 8074800
I1102 22:54:08.514897  2227 layer_factory.hpp:77] Creating layer ip2
I1102 22:54:08.514942  2227 net.cpp:84] Creating Layer ip2
I1102 22:54:08.514978  2227 net.cpp:406] ip2 <- ip1
I1102 22:54:08.515017  2227 net.cpp:380] ip2 -> ip2
I1102 22:54:08.515100  2227 net.cpp:122] Setting up ip2
I1102 22:54:08.515137  2227 net.cpp:129] Top shape: 100 10 (1000)
I1102 22:54:08.515169  2227 net.cpp:137] Memory required for data: 8078800
I1102 22:54:08.515205  2227 layer_factory.hpp:77] Creating layer ip2_ip2_0_split
I1102 22:54:08.515242  2227 net.cpp:84] Creating Layer ip2_ip2_0_split
I1102 22:54:08.515277  2227 net.cpp:406] ip2_ip2_0_split <- ip2
I1102 22:54:08.515312  2227 net.cpp:380] ip2_ip2_0_split -> ip2_ip2_0_split_0
I1102 22:54:08.515365  2227 net.cpp:380] ip2_ip2_0_split -> ip2_ip2_0_split_1
I1102 22:54:08.515415  2227 net.cpp:122] Setting up ip2_ip2_0_split
I1102 22:54:08.515451  2227 net.cpp:129] Top shape: 100 10 (1000)
I1102 22:54:08.515486  2227 net.cpp:129] Top shape: 100 10 (1000)
I1102 22:54:08.515518  2227 net.cpp:137] Memory required for data: 8086800
I1102 22:54:08.515552  2227 layer_factory.hpp:77] Creating layer accuracy
I1102 22:54:08.515586  2227 net.cpp:84] Creating Layer accuracy
I1102 22:54:08.515620  2227 net.cpp:406] accuracy <- ip2_ip2_0_split_0
I1102 22:54:08.515655  2227 net.cpp:406] accuracy <- label_mnist_1_split_0
I1102 22:54:08.515694  2227 net.cpp:380] accuracy -> accuracy
I1102 22:54:08.515733  2227 net.cpp:122] Setting up accuracy
I1102 22:54:08.515769  2227 net.cpp:129] Top shape: (1)
I1102 22:54:08.515801  2227 net.cpp:137] Memory required for data: 8086804
I1102 22:54:08.515835  2227 layer_factory.hpp:77] Creating layer loss
I1102 22:54:08.515887  2227 net.cpp:84] Creating Layer loss
I1102 22:54:08.515923  2227 net.cpp:406] loss <- ip2_ip2_0_split_1
I1102 22:54:08.515957  2227 net.cpp:406] loss <- label_mnist_1_split_1
I1102 22:54:08.515993  2227 net.cpp:380] loss -> loss
I1102 22:54:08.516041  2227 layer_factory.hpp:77] Creating layer loss
I1102 22:54:08.516094  2227 net.cpp:122] Setting up loss
I1102 22:54:08.516131  2227 net.cpp:129] Top shape: (1)
I1102 22:54:08.516165  2227 net.cpp:132]     with loss weight 1
I1102 22:54:08.516203  2227 net.cpp:137] Memory required for data: 8086808
I1102 22:54:08.516237  2227 net.cpp:198] loss needs backward computation.
I1102 22:54:08.516270  2227 net.cpp:200] accuracy does not need backward computation.
I1102 22:54:08.516306  2227 net.cpp:198] ip2_ip2_0_split needs backward computation.
I1102 22:54:08.516340  2227 net.cpp:198] ip2 needs backward computation.
I1102 22:54:08.516404  2227 net.cpp:198] relu1 needs backward computation.
I1102 22:54:08.516439  2227 net.cpp:198] ip1 needs backward computation.
I1102 22:54:08.516472  2227 net.cpp:198] pool2 needs backward computation.
I1102 22:54:08.516505  2227 net.cpp:198] conv2 needs backward computation.
I1102 22:54:08.516538  2227 net.cpp:198] pool1 needs backward computation.
I1102 22:54:08.516572  2227 net.cpp:198] conv1 needs backward computation.
I1102 22:54:08.516605  2227 net.cpp:200] label_mnist_1_split does not need backward computation.
I1102 22:54:08.516639  2227 net.cpp:200] mnist does not need backward computation.
I1102 22:54:08.516671  2227 net.cpp:242] This network produces output accuracy
I1102 22:54:08.516705  2227 net.cpp:242] This network produces output loss
I1102 22:54:08.516747  2227 net.cpp:255] Network initialization done.
I1102 22:54:08.516818  2227 solver.cpp:57] Solver scaffolding done.
I1102 22:54:08.516891  2227 caffe.cpp:248] Starting Optimization
I1102 22:54:08.516984  2227 solver.cpp:273] Solving LeNet
I1102 22:54:08.517056  2227 solver.cpp:274] Learning Rate Policy: inv
I1102 22:54:08.517544  2227 solver.cpp:331] Iteration 0, Testing net (#0)
